apply plugin: 'com.jfrog.bintray'

version = libraryVersion

if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

def bintrayUser = ""
def bintrayApiKey = ""
def bintrayGpgPassword = ""

def secureProperties = new File("${project.rootDir}/local.properties")
if (secureProperties.exists()) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('secure.properties').newDataInputStream())
    bintrayUser = properties.getProperty("bintray.user")
    bintrayApiKey = properties.getProperty("bintray.apikey")
    bintrayGpgPassword = properties.getProperty("bintray.gpg.password")
} else {
    bintrayUser = System.getenv("BINTRAY_USER")
    bintrayApiKey = System.getenv("BINTRAY_APIKEY")
    bintrayGpgPassword = System.getenv("BINTRAY_GPG_PASSWORD")
}

bintray {
    user = bintrayUser
    key = bintrayApiKey

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = bintrayGpgPassword
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}
